syntax = "proto3";

option go_package = "../orderproto";

package order;

service Order {
  rpc GetOrder (GetOrderRequest) returns (OrderResponse);
  rpc CreateOrder (CreateOrderRequest) returns (OrderResponse);
  rpc UpdateOrder (UpdateOrderRequest) returns (OrderResponse);
  rpc ReadyOrder (ReadyOrderRequest) returns (OrderResponse);
  rpc CompleteOrder (CompleteOrderRequest) returns (OrderResponse);
  rpc CancelOrder (CancelOrderRequest) returns (OrderResponse);
}
message GetOrderRequest {
  int32 order_id = 1;
  int32 shop_id = 2;
}

message CreateOrderRequest {
  int32 shop_id = 1;
  string user_id = 2;
  repeated OrderItem items = 3;
}

message UpdateOrderRequest {
  int32 order_id = 1;
  int32 shop_id = 2;
  int32 user_id = 3;
  repeated OrderItem items = 4;
}

message ReadyOrderRequest {
  int32 order_id = 1;
  int32 shop_id = 2;
}

message CompleteOrderRequest {
  int32 order_id = 1;
  int32 shop_id = 2;
}

message CancelOrderRequest {
  int32 order_id = 1;
  int32 shop_id = 2;
}

message OrderItem {
  int32 shop_id = 1;
  int32 shop_item_id = 2;
  int32 quantity = 3;
  optional string note = 4;
}

message OrderResponse {
  string order_id = 1;
  string shop_id = 2;
  string user_id = 3;
  string status = 4;
  repeated OrderItem items = 5;
}
